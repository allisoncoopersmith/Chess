memberSearchIndex = [{"p":"chess","c":"Bishop","l":"Bishop(String)","url":"Bishop-java.lang.String-"},{"p":"chess","c":"King","l":"blackCastling(int, int, int, int, Tile[][])","url":"blackCastling-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"blackCheckMate(String, ArrayList<ArrayList<Integer>>)","url":"blackCheckMate-java.lang.String-java.util.ArrayList-"},{"p":"chess","c":"Pawn","l":"blackEnpassant(int, int, int, int, Tile[][])","url":"blackEnpassant-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"blackInCheck(Tile[][])","url":"blackInCheck-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"blackKingAddress(Tile[][])","url":"blackKingAddress-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"blackResigns"},{"p":"chess","c":"Pawn","l":"blackValid(int, int, int, int, Tile[][])","url":"blackValid-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"blackWantsDraw"},{"p":"chess","c":"Board","l":"Board()"},{"p":"chess","c":"Piece","l":"checkColor()"},{"p":"chess","c":"Board","l":"checkForDraw(String)","url":"checkForDraw-java.lang.String-"},{"p":"chess","c":"Board","l":"checkForEnpassant(int, int, int, int, Tile[][])","url":"checkForEnpassant-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Pawn","l":"checkForPromotion(String, Tile[][])","url":"checkForPromotion-java.lang.String-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"checkInputFormat(String)","url":"checkInputFormat-java.lang.String-"},{"p":"chess","c":"Board","l":"checkValidInput(int, int, int, int, Tile[][])","url":"checkValidInput-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Chess","l":"Chess()"},{"p":"chess","c":"Board","l":"chessBoard"},{"p":"chess","c":"Board","l":"dealWithBlackCheck(String, ArrayList<ArrayList<Integer>>, int, int, int, int)","url":"dealWithBlackCheck-java.lang.String-java.util.ArrayList-int-int-int-int-"},{"p":"chess","c":"Board","l":"dealWithWhiteCheck(String, ArrayList<ArrayList<Integer>>, int, int, int, int)","url":"dealWithWhiteCheck-java.lang.String-java.util.ArrayList-int-int-int-int-"},{"p":"chess","c":"Tile","l":"fileRank"},{"p":"chess","c":"Board","l":"findPieceMovesBlack(int, int, Tile[][])","url":"findPieceMovesBlack-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"findPieceMovesWhite(int, int, Tile[][])","url":"findPieceMovesWhite-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"gameIsDone"},{"p":"chess","c":"Pawn","l":"getCanBeEnpassanted()"},{"p":"chess","c":"Tile","l":"getFileRank()"},{"p":"chess","c":"King","l":"getleftCastling()"},{"p":"chess","c":"Piece","l":"getMoved()"},{"p":"chess","c":"Tile","l":"getOccupyingPiece()"},{"p":"chess","c":"Tile","l":"getPieceColor()"},{"p":"chess","c":"Tile","l":"getPieceType()"},{"p":"chess","c":"King","l":"getrightCastling()"},{"p":"chess","c":"Board","l":"getValidBlackMoves(Tile[][])","url":"getValidBlackMoves-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"getValidWhiteMoves(Tile[][])","url":"getValidWhiteMoves-chess.Tile:A:A-"},{"p":"chess","c":"Pawn","l":"getWillEnpassant()"},{"p":"chess","c":"Board","l":"hypothValidInput(int, int, int, int, Tile[][])","url":"hypothValidInput-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Bishop","l":"isValidMove(int, int, int, int, Tile[][])","url":"isValidMove-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"isValidMove(int, int, int, int, Tile[][])","url":"isValidMove-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"King","l":"isValidMove(int, int, int, int, Tile[][])","url":"isValidMove-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Knight","l":"isValidMove(int, int, int, int, Tile[][])","url":"isValidMove-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Pawn","l":"isValidMove(int, int, int, int, Tile[][])","url":"isValidMove-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Queen","l":"isValidMove(int, int, int, int, Tile[][])","url":"isValidMove-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Rook","l":"isValidMove(int, int, int, int, Tile[][])","url":"isValidMove-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"isWhitesMove()"},{"p":"chess","c":"King","l":"King(String)","url":"King-java.lang.String-"},{"p":"chess","c":"Knight","l":"Knight(String)","url":"Knight-java.lang.String-"},{"p":"chess","c":"King","l":"leftCastling"},{"p":"chess","c":"Chess","l":"main(String[])","url":"main-java.lang.String:A-"},{"p":"chess","c":"Tile","l":"occupyingPiece"},{"p":"chess","c":"Pawn","l":"Pawn(String)","url":"Pawn-java.lang.String-"},{"p":"chess","c":"Piece","l":"Piece(String)","url":"Piece-java.lang.String-"},{"p":"chess","c":"Board","l":"printBoard()"},{"p":"chess","c":"Board","l":"promptPlayer()"},{"p":"chess","c":"Queen","l":"Queen(String)","url":"Queen-java.lang.String-"},{"p":"chess","c":"Board","l":"readInput(String)","url":"readInput-java.lang.String-"},{"p":"chess","c":"Board","l":"resetCastling()"},{"p":"chess","c":"Board","l":"resetEnpassant()"},{"p":"chess","c":"King","l":"rightCastling"},{"p":"chess","c":"Rook","l":"Rook(String)","url":"Rook-java.lang.String-"},{"p":"chess","c":"Pawn","l":"setCanBeEnpassanted(boolean)"},{"p":"chess","c":"Piece","l":"setMoved()"},{"p":"chess","c":"Tile","l":"setOccupyingPiece(Piece)","url":"setOccupyingPiece-chess.Piece-"},{"p":"chess","c":"Pawn","l":"setWillEnpassant(boolean)"},{"p":"chess","c":"Board","l":"switchPlayer()"},{"p":"chess","c":"Tile","l":"Tile(String, Piece)","url":"Tile-java.lang.String-chess.Piece-"},{"p":"chess","c":"Tile","l":"tileIsBlack"},{"p":"chess","c":"Tile","l":"toString()"},{"p":"chess","c":"Bishop","l":"updateBoard(int, int, int, int, Tile[][])","url":"updateBoard-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"King","l":"updateBoard(int, int, int, int, Tile[][])","url":"updateBoard-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Knight","l":"updateBoard(int, int, int, int, Tile[][])","url":"updateBoard-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Pawn","l":"updateBoard(int, int, int, int, Tile[][])","url":"updateBoard-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Queen","l":"updateBoard(int, int, int, int, Tile[][])","url":"updateBoard-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Rook","l":"updateBoard(int, int, int, int, Tile[][])","url":"updateBoard-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"updateBoard(int, int, int, int, String)","url":"updateBoard-int-int-int-int-java.lang.String-"},{"p":"chess","c":"Queen","l":"validBish(int, int, int, int, Tile[][])","url":"validBish-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Queen","l":"validRook(int, int, int, int, Tile[][])","url":"validRook-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"King","l":"whiteCastling(int, int, int, int, Tile[][])","url":"whiteCastling-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"whiteCheckMate(String, ArrayList<ArrayList<Integer>>)","url":"whiteCheckMate-java.lang.String-java.util.ArrayList-"},{"p":"chess","c":"Pawn","l":"whiteEnpassant(int, int, int, int, Tile[][])","url":"whiteEnpassant-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"whiteInCheck(Tile[][])","url":"whiteInCheck-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"whiteKingAddress(Tile[][])","url":"whiteKingAddress-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"whiteResigns"},{"p":"chess","c":"Board","l":"whitesMove"},{"p":"chess","c":"Pawn","l":"whiteValid(int, int, int, int, Tile[][])","url":"whiteValid-int-int-int-int-chess.Tile:A:A-"},{"p":"chess","c":"Board","l":"whiteWantsDraw"}]